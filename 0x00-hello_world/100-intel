#!/bin/bash

# Check if the CFILE variable is set
if [ -z "$CFILE" ]; then
    echo "Error: CFILE variable is not set."
    exit 1
fi

# Generate the assembly code and save it to a .s file
gcc -S -masm=intel "$CFILE"

# Get the base name of the C file (remove the path and .c extension)
BASENAME=$(basename -s .c "$CFILE")

# Rename the generated .s file with the same name as the C file
mv "$BASENAME.s" "$BASENAME.s"

echo "Assembly code generated and saved as $BASENAME.s"#!/bin/bash

# Check if the CFILE variable is set
if [ -z "$CFILE" ]; then
    echo "Error: CFILE variable is not set."
    exit 1
fi

# Get the base name of the C file without the extension
BASE_NAME=$(basename -s .c "$CFILE")

# Generate assembly code using GCC and save it to a .s file
gcc -S -masm=intel "$CFILE" -o "$BASE_NAME.s"

# Check if the compilation was successful
if [ $? -eq 0 ]; then
    echo "Assembly code generated successfully and saved as $BASE_NAME.s"
else
    echo "Error: Failed to generate assembly code."
    exit 1
fi

# Exit
exit 0

